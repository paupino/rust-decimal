[package]
authors = ["Paul Mason <paul@form1.co.nz>"]
build = "build.rs"
categories = ["science", "mathematics", "data-structures"]
description = "Decimal number implementation written in pure Rust suitable for financial and fixed-precision calculations."
documentation = "https://docs.rs/rust_decimal/"
edition = "2024"
exclude = ["tests/generated/*"]
keywords = ["decimal", "financial", "fixed", "precision", "number"]
license = "MIT"
name = "rust_decimal"
readme = "./README.md"
repository = "https://github.com/paupino/rust-decimal"
rust-version = "1.85.0"
version = "2.0.0-alpha.0"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
arbitrary = { default-features = false, optional = true, version = "1" }
arrayvec = { default-features = false, version = "0.7" }
borsh = { default-features = false, features = ["derive", "unstable__schema"], optional = true, version = "1" }
bytes = { default-features = false, optional = true, version = "1" }
diesel = { default-features = false, optional = true, version = "2" }
ndarray-0_16 = { default-features = false, optional = true, package = "ndarray", version = "0.16" }
num-traits = { default-features = false, features = ["i128"], package = "num-traits", version = "0.2" }
postgres-types = { default-features = false, optional = true, package = "postgres-types", version = "0.2" }
proptest = { default-features = false, optional = true, features = ["std"], version = "1.0" }
rand-0_9 = { default-features = false, optional = true, package = "rand", version = "0.9" }
rocket = { default-features = false, optional = true, version = "0.5" }
rust_decimal_macros = { path = "macros", default-features = false, optional = true, version = "1" }
serde = { default-features = false, optional = true, version = "1" }
serde_json = { default-features = false, optional = true, version = "1" }

[dev-dependencies]
bincode = { default-features = false, version = "1" }
bytes = { default-features = false, version = "1" }
criterion = { default-features = false, version = "0.5" }
csv = "1"
diesel = { default-features = false, features = ["mysql", "postgres"], version = "2" }
futures = { default-features = false, version = "0.3" }
postgres = { default-features = false, version = "0.19" }
rand-0_9 = { default-features = false, features = ["thread_rng"], package = "rand", version = "0.9" }
rkyv-0_8 = { version = "0.8", package = "rkyv" }
serde = { default-features = false, features = ["derive"], version = "1.0" }
serde_json = "1.0"
tokio = { default-features = false, features = ["macros", "rt-multi-thread", "test-util"], version = "1" }
tokio-postgres = { default-features = false, version = "0.7" }
version-sync = { default-features = false, features = ["html_root_url_updated", "markdown_deps_updated"], version = "0.9" }

# Enable features for testing
rust_decimal = { path = ".", features = ["rand-0_9", "macros", "rocket-0_5-traits"] }

[features]
default = ["serde", "std"]

borsh = ["dep:borsh", "std"]
c-repr = [] # Force Decimal to be repr(C)
db-diesel-mysql = ["diesel/mysql_backend", "std"]
db-diesel-postgres = ["diesel/postgres_backend", "std"]
db-diesel2-mysql = ["db-diesel-mysql"]
db-diesel2-postgres = ["db-diesel-postgres"]
db-postgres = ["dep:bytes", "dep:postgres-types", "std"]
db-tokio-postgres = ["dep:bytes", "dep:postgres-types", "std"]
macros = ["dep:rust_decimal_macros"]
maths = []
maths-nopanic = ["maths"]
ndarray-0_16 = ["dep:ndarray-0_16"]
proptest = ["dep:proptest"]
rand-0_9 = ["dep:rand-0_9"]
rocket-0_5-traits = ["dep:rocket", "std"]
rust-fuzz = ["dep:arbitrary"]
serde = ["dep:serde"]
serde-arbitrary-precision = ["serde-with-arbitrary-precision"]
serde-bincode = ["serde-str"] # Backwards compatability
serde-float = ["serde-with-float"]
serde-str = ["serde-with-str"]
serde-with-arbitrary-precision = ["serde", "serde_json/arbitrary_precision", "serde_json/std"]
serde-with-float = ["serde"]
serde-with-str = ["serde"]
std = ["arrayvec/std", "borsh?/std", "bytes?/std", "rand-0_9?/std", "serde?/std", "serde_json?/std"]
tokio-pg = ["db-tokio-postgres"] # Backwards compatability

[[bench]]
harness = false
name = "comparison"
path = "benches/comparison.rs"

[[example]]
name = "rkyv-remote"
required-features = ["macros"]

[workspace]
members = [
    ".",
    "./macros",
]
resolver = "2"
